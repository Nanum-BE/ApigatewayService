server:
  port: 8000

springdoc.api-docs.path : /openapi

spring:
  profiles:
    include: prod
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  application:
    name: apigateway-service
  rabbitmq:
    port: 5672
    username: guest
    password: guest
    host: 20.214.170.222
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allow-credentials: true
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method= POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/v1/sms/**
            - Method= POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/bus/v3/api-docs
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/v1/signup/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/v1/oauth/signup
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/v1/check/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/**
            - Method=GET, PUT
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/nonuser-service/api/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/nonuser-service/(?<segment>.*), /$\{segment}

          #TODO 게시판 CRUD 관해서 관리자 권한으로 구분지어야 함
        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/categories/**
            - Method=POST, PUT
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/categories/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/posts/**
            - Method=POST, PUT
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/like/**
            - Method=POST, PUT, DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/posts/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/board/reply/**
            - Method=POST, PUT
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/api/v1/board/reply/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}

        - id: supplementary-service
          uri: lb://SUPPLEMENTARY-SERVICE
          predicates:
            - Path=/supplementary-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/supplementary-service/(?<segment>.*), /$\{segment}

        - id: ${spring.application.name}
          uri: lb://${spring.application.name}
          predicates:
            - Path=/openapi/${spring.application.name}
          filters:
            - RewritePath=/openapi/${spring.application.name}, /openapi

        - id: supplementary-service
          uri: lb://SUPPLEMENTARY-SERVICE
          predicates:
            - Path=/openapi/supplementary-service
          filters:
            - RewritePath=/supplementary-service/openapi/supplementary-service, /openapi

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/openapi/board-service
          filters:
            - RewritePath=/board-service/openapi/board-service, /openapi

        - id: house-service
          uri: lb://HOUSE-SERVICE
          predicates:
            - Path=/openapi/house-service
          filters:
            - RewritePath=/house-service/openapi/house-service, /openapi

        - id: web-flux-service
          uri: lb://WEB-FLUX-SERVICE
          predicates:
            - Path=/openapi/web-flux-service
          filters:
            - RewritePath=/web-flux-service/openapi/web-flux-service, /openapi

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/openapi/user-service
          filters:
            - RewritePath=/user-service/openapi/user-service, /openapi

        - id: house-service
          uri: lb://HOUSE-SERVICE
          predicates:
            - Path=/house-service/**
          filters:
            - RewritePath=/house-service/(?<path>.*), /$\{path}

        - id: web-flux-service
          uri: lb://WEB-FLUX-SERVICE
          predicates:
            - Path=/web-flux-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/web-flux-service/(?<segment>.*), /$\{segment}

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans,info, httptrace, busrefresh, metrics, prometheus
